def baseProjectName = 'pterodactyl.pagecomprehension.pageAnalysis'
def baseProjectDescription = 'Pterodactyl PageAnalysis'
def base = baseProjectName

project.ext.domainName = 'pageComp'

apply from: "../../build.gradle"

buildscript {
    repositories {
    }
    dependencies {
    }
}

task build(type: Copy) {
    println('Copying output to deployments')

    FileTree tree = fileTree(dir: '.')
    tree.exclude 'Tests'
    tree.exclude 'exp'
    tree.exclude '.gradle'
    tree.exclude '*.gradle'
    tree.exclude 'build'
    tree.exclude '*.postman_collection'
    tree.exclude '.idea'

    from tree
    into target + '/app'

    FileTree pythonLibTree = fileTree(dir: '../../../lib/python3')

    from pythonLibTree
    into target + '/app'
}

task run_interface(type:Exec) {
    println('Running the PageAnalysis Service')
    workingDir='.'
    commandLine 'python', 'PageAnalysis/Service.py'
}

build.outputs.upToDateWhen {false}

task copyToDeployments(type: Copy) {
    println('Copying output to PageAnalysis deployment')

    def source = 'nginx.conf'
    from source
    into target

    source = 'core_nginx.conf'
    from source
    into target

    source = 'supervisord.conf'
    from source
    into target
}

copyToDeployments.outputs.upToDateWhen {false}

build.finalizedBy(copyToDeployments)